{"remainingRequest":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/node_modules/babel-loader/lib/index.js!/Users/liuyatou/huangyuhui/workspace/vue/supermall/src/network/request.js","dependencies":[{"path":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/src/network/request.js","mtime":1577236520000},{"path":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogaW1wb3J0IG9yaWdpbkF4aW9zIGZyb20gJ2F4aW9zJw0KaW1wb3J0IHFzIGZyb20gJ3FzJw0KICovCgovKiBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBheGlvcyhvcHRpb24pIHsNCglyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KCQkvLyAxLuWIm+W7umF4aW9z55qE5a6e5L6LDQoJCWNvbnN0IGluc3RhbmNlID0gb3JpZ2luQXhpb3MuY3JlYXRlKHsNCgkJCWJhc2VVUkw6ICdodHRwOi8vMTIzLjIwNy4zMi4zMjo4MDAwJywNCgkJCXRpbWVvdXQ6IDUwMDANCgkJfSk7DQoNCgkJLy8g6YWN572u6K+35rGC5ZKM5ZON5bqU5oum5oiqDQoJCWluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShjb25maWcgPT4gew0KCQkJLy8gY29uc29sZS5sb2coJ+adpeWIsOS6hnJlcXVlc3Tmi6bmiKpzdWNjZXNz5LitJyk7DQoJCQkvLyAxLuW9k+WPkemAgee9kee7nOivt+axguaXtiwg5Zyo6aG16Z2i5Lit5re75Yqg5LiA5LiqbG9hZGluZ+e7hOS7tiwg5L2c5Li65Yqo55S7DQoNCgkJCS8vIDIu5p+Q5Lqb6K+35rGC6KaB5rGC55So5oi35b+F6aG755m75b2VLCDliKTmlq3nlKjmiLfmmK/lkKbmnIl0b2tlbiwg5aaC5p6c5rKh5pyJdG9rZW7ot7PovazliLBsb2dpbumhtemdog0KDQoJCQkvLyAzLuWvueivt+axgueahOWPguaVsOi/m+ihjOW6j+WIl+WMlijnnIvmnI3liqHlmajmmK/lkKbpnIDopoHluo/liJfljJYpDQoJCQkvLyBjb25maWcuZGF0YSA9IHFzLnN0cmluZ2lmeShjb25maWcuZGF0YSkNCgkJCS8vIGNvbnNvbGUubG9nKGNvbmZpZyk7DQoNCgkJCS8vIDQu562J562JDQoJCQlyZXR1cm4gY29uZmlnDQoJCX0sIGVyciA9PiB7DQoJCQkvLyBjb25zb2xlLmxvZygn5p2l5Yiw5LqGcmVxdWVzdOaLpuaIqmZhaWx1cmXkuK0nKTsNCgkJCXJldHVybiBlcnINCgkJfSkNCg0KCQlpbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKHJlc3BvbnNlID0+IHsNCgkJCS8vIGNvbnNvbGUubG9nKCfmnaXliLDkuoZyZXNwb25zZeaLpuaIqnN1Y2Nlc3PkuK0nKTsNCgkJCXJldHVybiByZXNwb25zZS5kYXRhDQoJCX0sIGVyciA9PiB7DQoJCQljb25zb2xlLmxvZygn5p2l5Yiw5LqGcmVzcG9uc2Xmi6bmiKpmYWlsdXJl5LitJyk7DQogICAgICBjb25zb2xlLmxvZyhlcnIpOw0KICAgICAgaWYgKGVyciAmJiBlcnIucmVzcG9uc2UpIHsNCgkJCQlzd2l0Y2ggKGVyci5yZXNwb25zZS5zdGF0dXMpIHsNCgkJCQkJY2FzZSA0MDA6DQoJCQkJCQllcnIubWVzc2FnZSA9ICfor7fmsYLplJnor68nDQoJCQkJCQlicmVhaw0KCQkJCQljYXNlIDQwMToNCgkJCQkJCWVyci5tZXNzYWdlID0gJ+acquaOiOadg+eahOiuv+mXricNCgkJCQkJCWJyZWFrDQoJCQkJfQ0KCQkJfQ0KCQkJcmV0dXJuIGVycg0KCQl9KQ0KDQoJCS8vIDIu5Lyg5YWl5a+56LGh6L+b6KGM572R57uc6K+35rGCDQoJCWluc3RhbmNlKG9wdGlvbikudGhlbihyZXMgPT4gew0KCQkJcmVzb2x2ZShyZXMpDQoJCX0pLmNhdGNoKGVyciA9PiB7DQoJCQlyZWplY3QoZXJyKQ0KCQl9KQ0KCX0pDQp9DQogKi8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGJhc2VVUkwgPSAiaHR0cDovLzEyMy4yMDcuMzIuMzI6ODAwMC9hcGkvdzEiOyAvL2NvbnN0IGJhc2VVUkwgPSAiaHR0cDovLzEwNi41NC41NC4yMzc6ODAwMC9hcGkvdzEiCgpleHBvcnQgZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHsKICAvLyByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+ewogIC8vMS7liJvlu7rllYpheGlvcyDlrp7kvosKICB2YXIgaW5zdGFuY2UxID0gYXhpb3MuY3JlYXRlKHsKICAgIC8vYmFzZVVSTDonaHR0cDovLzEyMy4yMDcuMzIuMzI6ODAwMCcsCiAgICBiYXNlVVJMOiBiYXNlVVJMLAogICAgdGltZW91dDogNTAwMAogIH0pOyAvLzIuYXhpb3PnmoTmi6bmiKrlmagKCiAgaW5zdGFuY2UxLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICByZXR1cm4gY29uZmlnOwogIH0sIGZ1bmN0aW9uIChlcnIpIHt9KTsKICBpbnN0YW5jZTEuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzdWx0KSB7CiAgICByZXR1cm4gcmVzdWx0LmRhdGE7CiAgfSwgZnVuY3Rpb24gKGVycikgewogICAgY29uc29sZS5sb2coZXJyKTsKICB9KTsgLy8zLuWPkemAgeecn+ato+eahOe9kee7nOmcgOaxggoKICByZXR1cm4gaW5zdGFuY2UxKGNvbmZpZyk7IC8vaW5zdGFuY2XmnKzouqvlsLHmmK/kuIDkuKpQcm9taXNlLOaJgOS7peS4jemcgOimgeWGjeWcqOWklumdouWMheS4gOS4qm5ldyBQcm9taXNlLOWQpuWIme+8jHJlc3VsdC5kYXRh6ZyA6KaB77yIcmVzbG92Ze+8iQogIC8vIH0pCn0="},{"version":3,"sources":["/Users/liuyatou/huangyuhui/workspace/vue/supermall/src/network/request.js"],"names":["axios","baseURL","request","config","instance1","create","timeout","interceptors","use","err","response","result","data","console","log"],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDC,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AAGG,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAwB;AAC5B;AACK;AACA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvC;AACAJ,IAAAA,OAAO,EAACA,OAF+B;AAG3BK,IAAAA,OAAO,EAAC;AAHmB,GAAb,CAAlB,CAHuB,CAQvB;;AACAF,EAAAA,SAAS,CAACG,YAAV,CAAuBL,OAAvB,CAA+BM,GAA/B,CAAmC,UAACL,MAAD,EAAU;AACzC,WAAOA,MAAP;AACH,GAFD,EAEE,UAAAM,GAAG,EAAE,CACN,CAHD;AAKAL,EAAAA,SAAS,CAACG,YAAV,CAAuBG,QAAvB,CAAgCF,GAAhC,CAAoC,UAACG,MAAD,EAAU;AAC1C,WAAOA,MAAM,CAACC,IAAd;AACH,GAFD,EAEE,UAAAH,GAAG,EAAE;AACHI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH,GAJD,EAduB,CAoBvB;;AACA,SAAOL,SAAS,CAACD,MAAD,CAAhB,CArBuB,CAqBM;AAClC;AACF","sourcesContent":["/* import originAxios from 'axios'\r\nimport qs from 'qs'\r\n */\r\n/* export default function axios(option) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// 1.创建axios的实例\r\n\t\tconst instance = originAxios.create({\r\n\t\t\tbaseURL: 'http://123.207.32.32:8000',\r\n\t\t\ttimeout: 5000\r\n\t\t});\r\n\r\n\t\t// 配置请求和响应拦截\r\n\t\tinstance.interceptors.request.use(config => {\r\n\t\t\t// console.log('来到了request拦截success中');\r\n\t\t\t// 1.当发送网络请求时, 在页面中添加一个loading组件, 作为动画\r\n\r\n\t\t\t// 2.某些请求要求用户必须登录, 判断用户是否有token, 如果没有token跳转到login页面\r\n\r\n\t\t\t// 3.对请求的参数进行序列化(看服务器是否需要序列化)\r\n\t\t\t// config.data = qs.stringify(config.data)\r\n\t\t\t// console.log(config);\r\n\r\n\t\t\t// 4.等等\r\n\t\t\treturn config\r\n\t\t}, err => {\r\n\t\t\t// console.log('来到了request拦截failure中');\r\n\t\t\treturn err\r\n\t\t})\r\n\r\n\t\tinstance.interceptors.response.use(response => {\r\n\t\t\t// console.log('来到了response拦截success中');\r\n\t\t\treturn response.data\r\n\t\t}, err => {\r\n\t\t\tconsole.log('来到了response拦截failure中');\r\n      console.log(err);\r\n      if (err && err.response) {\r\n\t\t\t\tswitch (err.response.status) {\r\n\t\t\t\t\tcase 400:\r\n\t\t\t\t\t\terr.message = '请求错误'\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 401:\r\n\t\t\t\t\t\terr.message = '未授权的访问'\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t})\r\n\r\n\t\t// 2.传入对象进行网络请求\r\n\t\tinstance(option).then(res => {\r\n\t\t\tresolve(res)\r\n\t\t}).catch(err => {\r\n\t\t\treject(err)\r\n\t\t})\r\n\t})\r\n}\r\n */\r\n\timport axios from 'axios';\r\n\t\r\n\tconst baseURL = \"http://123.207.32.32:8000/api/w1\"\r\n\t//const baseURL = \"http://106.54.54.237:8000/api/w1\"\r\n\t\r\n\r\n    export function request(config){\r\n       // return new Promise((resolve,reject)=>{\r\n            //1.创建啊axios 实例\r\n            const instance1 = axios.create({\r\n\t\t\t\t//baseURL:'http://123.207.32.32:8000',\r\n\t\t\t\tbaseURL:baseURL,\r\n                timeout:5000\r\n            })\r\n            //2.axios的拦截器\r\n            instance1.interceptors.request.use((config)=>{\r\n                return config \r\n            },err=>{\r\n            })\r\n\r\n            instance1.interceptors.response.use((result)=>{\r\n                return result.data\r\n            },err=>{\r\n                console.log(err)\r\n            })\r\n\r\n            //3.发送真正的网络需求\r\n            return instance1(config)     //instance本身就是一个Promise,所以不需要再在外面包一个new Promise,否则，result.data需要（reslove）\r\n       // })\r\n    }"]}]}