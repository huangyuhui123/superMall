{"remainingRequest":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/node_modules/babel-loader/lib/index.js!/Users/liuyatou/huangyuhui/workspace/vue/supermall/src/network/request.js","dependencies":[{"path":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/src/network/request.js","mtime":1577022524981},{"path":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyatou/huangyuhui/workspace/vue/supermall/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CgovKiBpbXBvcnQgb3JpZ2luQXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCBxcyBmcm9tICdxcycKICovCgovKiBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBheGlvcyhvcHRpb24pIHsKCXJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgkJLy8gMS7liJvlu7pheGlvc+eahOWunuS+iwoJCWNvbnN0IGluc3RhbmNlID0gb3JpZ2luQXhpb3MuY3JlYXRlKHsKCQkJYmFzZVVSTDogJ2h0dHA6Ly8xMjMuMjA3LjMyLjMyOjgwMDAnLAoJCQl0aW1lb3V0OiA1MDAwCgkJfSk7CgoJCS8vIOmFjee9ruivt+axguWSjOWTjeW6lOaLpuaIqgoJCWluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShjb25maWcgPT4gewoJCQkvLyBjb25zb2xlLmxvZygn5p2l5Yiw5LqGcmVxdWVzdOaLpuaIqnN1Y2Nlc3PkuK0nKTsKCQkJLy8gMS7lvZPlj5HpgIHnvZHnu5zor7fmsYLml7YsIOWcqOmhtemdouS4rea3u+WKoOS4gOS4qmxvYWRpbmfnu4Tku7YsIOS9nOS4uuWKqOeUuwoKCQkJLy8gMi7mn5Dkupvor7fmsYLopoHmsYLnlKjmiLflv4XpobvnmbvlvZUsIOWIpOaWreeUqOaIt+aYr+WQpuaciXRva2VuLCDlpoLmnpzmsqHmnIl0b2tlbui3s+i9rOWIsGxvZ2lu6aG16Z2iCgoJCQkvLyAzLuWvueivt+axgueahOWPguaVsOi/m+ihjOW6j+WIl+WMlijnnIvmnI3liqHlmajmmK/lkKbpnIDopoHluo/liJfljJYpCgkJCS8vIGNvbmZpZy5kYXRhID0gcXMuc3RyaW5naWZ5KGNvbmZpZy5kYXRhKQoJCQkvLyBjb25zb2xlLmxvZyhjb25maWcpOwoKCQkJLy8gNC7nrYnnrYkKCQkJcmV0dXJuIGNvbmZpZwoJCX0sIGVyciA9PiB7CgkJCS8vIGNvbnNvbGUubG9nKCfmnaXliLDkuoZyZXF1ZXN05oum5oiqZmFpbHVyZeS4rScpOwoJCQlyZXR1cm4gZXJyCgkJfSkKCgkJaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShyZXNwb25zZSA9PiB7CgkJCS8vIGNvbnNvbGUubG9nKCfmnaXliLDkuoZyZXNwb25zZeaLpuaIqnN1Y2Nlc3PkuK0nKTsKCQkJcmV0dXJuIHJlc3BvbnNlLmRhdGEKCQl9LCBlcnIgPT4gewoJCQljb25zb2xlLmxvZygn5p2l5Yiw5LqGcmVzcG9uc2Xmi6bmiKpmYWlsdXJl5LitJyk7CiAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIGlmIChlcnIgJiYgZXJyLnJlc3BvbnNlKSB7CgkJCQlzd2l0Y2ggKGVyci5yZXNwb25zZS5zdGF0dXMpIHsKCQkJCQljYXNlIDQwMDoKCQkJCQkJZXJyLm1lc3NhZ2UgPSAn6K+35rGC6ZSZ6K+vJwoJCQkJCQlicmVhawoJCQkJCWNhc2UgNDAxOgoJCQkJCQllcnIubWVzc2FnZSA9ICfmnKrmjojmnYPnmoTorr/pl64nCgkJCQkJCWJyZWFrCgkJCQl9CgkJCX0KCQkJcmV0dXJuIGVycgoJCX0pCgoJCS8vIDIu5Lyg5YWl5a+56LGh6L+b6KGM572R57uc6K+35rGCCgkJaW5zdGFuY2Uob3B0aW9uKS50aGVuKHJlcyA9PiB7CgkJCXJlc29sdmUocmVzKQoJCX0pLmNhdGNoKGVyciA9PiB7CgkJCXJlamVjdChlcnIpCgkJfSkKCX0pCn0KICovCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAvLzEu5Yib5bu65ZWKYXhpb3Mg5a6e5L6LCiAgICB2YXIgaW5zdGFuY2UxID0gYXhpb3MuY3JlYXRlKHsKICAgICAgYmFzZVVSTDogJ2h0dHA6Ly8xMjMuMjA3LjMyLjMyOjgwMDAnLAogICAgICB0aW1lb3V0OiA1MDAwCiAgICB9KTsgLy8yLmF4aW9z55qE5oum5oiq5ZmoCgogICAgaW5zdGFuY2UxLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgIC8vY29uc29sZS5sb2coY29uZmlnKQogICAgICAvLzEuIOavlOWmgmNvbmZpZ+S4reeahOS4gOS6m+S/oeaBr+S4jeespuWQiOacjeWKoeWZqOeahOimgeaxggogICAgICAvLzIu5q+U5aaC5q+P5qyh5Y+R6YCB572R57uc6K+35rGC5pe277yM6YO95biM5pyb5Zyo5oiq6Z2i5pi+56S65LiA5Liq5Yqo55S7CiAgICAgIC8vMy7mn5DkupvnvZHnu5zor7fmsYLvvIjmr5TlpoLnmbvpmYbvvInvvIzlv4XpobvmkLrluKbkuIDkupvnibnmrornmoTkv6Hmga8KICAgICAgcmV0dXJuIGNvbmZpZzsKICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsvL2NvbnNvbGUubG9nKGVycikKICAgIH0pOwogICAgaW5zdGFuY2UxLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOwogICAgICByZXR1cm4gcmVzdWx0LmRhdGE7CiAgICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICB9KTsgLy8zLuWPkemAgeecn+ato+eahOe9kee7nOmcgOaxggoKICAgIHJldHVybiBpbnN0YW5jZTEoY29uZmlnKTsgLy9pbnN0YW5jZeacrOi6q+WwseaYr+S4gOS4qlByb21pc2UKICB9KTsKfQ=="},{"version":3,"sources":["/Users/liuyatou/huangyuhui/workspace/vue/supermall/src/network/request.js"],"names":["axios","request","config","Promise","resolve","reject","instance1","create","baseURL","timeout","interceptors","use","err","response","result","console","log","data"],"mappings":";;AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAOA,KAAP,MAAkB,OAAlB;AAEI,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAwB;AAC3B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjC;AACA,QAAMC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC3BC,MAAAA,OAAO,EAAC,2BADmB;AAE3BC,MAAAA,OAAO,EAAC;AAFmB,KAAb,CAAlB,CAFiC,CAMjC;;AACAH,IAAAA,SAAS,CAACI,YAAV,CAAuBT,OAAvB,CAA+BU,GAA/B,CAAmC,UAACT,MAAD,EAAU;AACzC;AACA;AAEA;AAEA;AACA,aAAOA,MAAP;AACH,KARD,EAQE,UAAAU,GAAG,EAAE,CACH;AACH,KAVD;AAYAN,IAAAA,SAAS,CAACI,YAAV,CAAuBG,QAAvB,CAAgCF,GAAhC,CAAoC,UAACG,MAAD,EAAU;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOA,MAAM,CAACG,IAAd;AACH,KAHD,EAGE,UAAAL,GAAG,EAAE;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,KALD,EAnBiC,CA2BjC;;AACA,WAAON,SAAS,CAACJ,MAAD,CAAhB,CA5BiC,CA4BJ;AAChC,GA7BM,CAAP;AA8BH","sourcesContent":["/* import originAxios from 'axios'\nimport qs from 'qs'\n */\n/* export default function axios(option) {\n\treturn new Promise((resolve, reject) => {\n\t\t// 1.创建axios的实例\n\t\tconst instance = originAxios.create({\n\t\t\tbaseURL: 'http://123.207.32.32:8000',\n\t\t\ttimeout: 5000\n\t\t});\n\n\t\t// 配置请求和响应拦截\n\t\tinstance.interceptors.request.use(config => {\n\t\t\t// console.log('来到了request拦截success中');\n\t\t\t// 1.当发送网络请求时, 在页面中添加一个loading组件, 作为动画\n\n\t\t\t// 2.某些请求要求用户必须登录, 判断用户是否有token, 如果没有token跳转到login页面\n\n\t\t\t// 3.对请求的参数进行序列化(看服务器是否需要序列化)\n\t\t\t// config.data = qs.stringify(config.data)\n\t\t\t// console.log(config);\n\n\t\t\t// 4.等等\n\t\t\treturn config\n\t\t}, err => {\n\t\t\t// console.log('来到了request拦截failure中');\n\t\t\treturn err\n\t\t})\n\n\t\tinstance.interceptors.response.use(response => {\n\t\t\t// console.log('来到了response拦截success中');\n\t\t\treturn response.data\n\t\t}, err => {\n\t\t\tconsole.log('来到了response拦截failure中');\n      console.log(err);\n      if (err && err.response) {\n\t\t\t\tswitch (err.response.status) {\n\t\t\t\t\tcase 400:\n\t\t\t\t\t\terr.message = '请求错误'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 401:\n\t\t\t\t\t\terr.message = '未授权的访问'\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn err\n\t\t})\n\n\t\t// 2.传入对象进行网络请求\n\t\tinstance(option).then(res => {\n\t\t\tresolve(res)\n\t\t}).catch(err => {\n\t\t\treject(err)\n\t\t})\n\t})\n}\n */\nimport axios from 'axios'\n\n    export function request(config){\n        return new Promise((resolve,reject)=>{\n            //1.创建啊axios 实例\n            const instance1 = axios.create({\n                baseURL:'http://123.207.32.32:8000',\n                timeout:5000\n            })\n            //2.axios的拦截器\n            instance1.interceptors.request.use((config)=>{\n                //console.log(config)\n                //1. 比如config中的一些信息不符合服务器的要求\n\n                //2.比如每次发送网络请求时，都希望在截面显示一个动画\n\n                //3.某些网络请求（比如登陆），必须携带一些特殊的信息\n                return config \n            },err=>{\n                //console.log(err)\n            })\n\n            instance1.interceptors.response.use((result)=>{\n                console.log(result)\n                return result.data\n            },err=>{\n                console.log(err)\n            })\n\n\n            //3.发送真正的网络需求\n            return instance1(config)     //instance本身就是一个Promise\n        })\n    }"]}]}